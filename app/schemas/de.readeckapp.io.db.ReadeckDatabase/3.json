{
  "formatVersion": 1,
  "database": {
    "version": 3,
    "identityHash": "b087bbe44cd3990fbea51e8ccb8fcd5a",
    "entities": [
      {
        "tableName": "bookmarks",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `href` TEXT NOT NULL, `created` INTEGER NOT NULL, `updated` INTEGER NOT NULL, `state` INTEGER NOT NULL, `loaded` INTEGER NOT NULL, `url` TEXT NOT NULL, `title` TEXT NOT NULL, `siteName` TEXT NOT NULL, `site` TEXT NOT NULL, `authors` TEXT NOT NULL, `lang` TEXT NOT NULL, `textDirection` TEXT NOT NULL, `documentTpe` TEXT NOT NULL, `type` TEXT NOT NULL, `hasArticle` INTEGER NOT NULL, `description` TEXT NOT NULL, `isDeleted` INTEGER NOT NULL, `isMarked` INTEGER NOT NULL, `isArchived` INTEGER NOT NULL, `labels` TEXT NOT NULL, `readProgress` INTEGER NOT NULL, `wordCount` INTEGER, `readingTime` INTEGER, `article_src` TEXT NOT NULL, `icon_src` TEXT NOT NULL, `icon_width` INTEGER NOT NULL, `icon_height` INTEGER NOT NULL, `image_src` TEXT NOT NULL, `image_width` INTEGER NOT NULL, `image_height` INTEGER NOT NULL, `log_src` TEXT NOT NULL, `props_src` TEXT NOT NULL, `thumbnail_src` TEXT NOT NULL, `thumbnail_width` INTEGER NOT NULL, `thumbnail_height` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "href",
            "columnName": "href",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "created",
            "columnName": "created",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updated",
            "columnName": "updated",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "loaded",
            "columnName": "loaded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "siteName",
            "columnName": "siteName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "site",
            "columnName": "site",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "authors",
            "columnName": "authors",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lang",
            "columnName": "lang",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "textDirection",
            "columnName": "textDirection",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "documentTpe",
            "columnName": "documentTpe",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "hasArticle",
            "columnName": "hasArticle",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isDeleted",
            "columnName": "isDeleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isMarked",
            "columnName": "isMarked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isArchived",
            "columnName": "isArchived",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "labels",
            "columnName": "labels",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "readProgress",
            "columnName": "readProgress",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "wordCount",
            "columnName": "wordCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "readingTime",
            "columnName": "readingTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "article.src",
            "columnName": "article_src",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "icon.src",
            "columnName": "icon_src",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "icon.width",
            "columnName": "icon_width",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "icon.height",
            "columnName": "icon_height",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "image.src",
            "columnName": "image_src",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "image.width",
            "columnName": "image_width",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "image.height",
            "columnName": "image_height",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "log.src",
            "columnName": "log_src",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "props.src",
            "columnName": "props_src",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "thumbnail.src",
            "columnName": "thumbnail_src",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "thumbnail.width",
            "columnName": "thumbnail_width",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "thumbnail.height",
            "columnName": "thumbnail_height",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_bookmarks_readProgress",
            "unique": false,
            "columnNames": [
              "readProgress"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_bookmarks_readProgress` ON `${TABLE_NAME}` (`readProgress`)"
          },
          {
            "name": "index_bookmarks_type",
            "unique": false,
            "columnNames": [
              "type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_bookmarks_type` ON `${TABLE_NAME}` (`type`)"
          },
          {
            "name": "index_bookmarks_isArchived",
            "unique": false,
            "columnNames": [
              "isArchived"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_bookmarks_isArchived` ON `${TABLE_NAME}` (`isArchived`)"
          },
          {
            "name": "index_bookmarks_isMarked",
            "unique": false,
            "columnNames": [
              "isMarked"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_bookmarks_isMarked` ON `${TABLE_NAME}` (`isMarked`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "article_content",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`bookmarkId` TEXT NOT NULL, `content` TEXT NOT NULL, PRIMARY KEY(`bookmarkId`), FOREIGN KEY(`bookmarkId`) REFERENCES `bookmarks`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "bookmarkId",
            "columnName": "bookmarkId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "bookmarkId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "bookmarks",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "bookmarkId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "remote_bookmark_ids",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'b087bbe44cd3990fbea51e8ccb8fcd5a')"
    ]
  }
}